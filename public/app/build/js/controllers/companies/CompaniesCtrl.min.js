"use strict";angular.module("BfcApp").controller("CompaniesCtrl",["$scope","CompanyService","UserService","toaster","underscore",function(e,s,t,n,r){function a(){t.AvailableUsers().then(function(s){e.available_users=s})}e.totalPages=0,e.currentPage=1,e.range=[],e.items=[],e.getItems=function(t){void 0===t&&(t="1"),s.Index(t).then(function(s){e.items=s.data,e.totalPages=s.data.last_page,e.currentPage=s.data.current_page;for(var t=[],n=1;n<=s.data.last_page;n++)t.push(n);e.range=t})},e.getItems(),t.Index(1,!0).then(function(s){e.users=s}),a(),e.assignedUsers=function(){e.attached_users=[];var s=r.find(e.items.data,function(s){return s.id==e.selected_items.id});r.isEmpty(s.users)||angular.forEach(s.users,function(s,t){e.attached_users.push(r.find(e.users.data,function(e){return e.id==s.id}))})},e.assignUser=function(s){e.attached_users.push(r.find(e.available_users.data,function(e){return e.id==s}))},e.deassignUser=function(s){e.attached_users.splice(s,1)},e.optionAllowed=function(s){var t=r.find(e.attached_users,function(e){return e.id==s});return!!t},e.saveCompaniesUsers=function(){s.CompaniesUsers(e.selected_items.id,e.attached_users).then(function(s){s.success?(n.pop("success","Success!",""),e.getItems(),a()):n.pop("error","","Server error!")})},e.selected_items={},e.delete=function(){s.Destroy(e.selected_items.id).then(function(s){s.success?(n.pop("success","Success!",""),e.getItems(),a()):n.pop("error","","Server error!")})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbmllcy9Db21wYW5pZXNDdHJsLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiQ29tcGFueVNlcnZpY2UiLCJVc2VyU2VydmljZSIsInRvYXN0ZXIiLCJ1bmRlcnNjb3JlIiwiYXZhaWxhYmxlVXNlcnMiLCJBdmFpbGFibGVVc2VycyIsInRoZW4iLCJyZXNwb25zZSIsImF2YWlsYWJsZV91c2VycyIsInRvdGFsUGFnZXMiLCJjdXJyZW50UGFnZSIsInJhbmdlIiwiaXRlbXMiLCJnZXRJdGVtcyIsInBhZ2VOdW1iZXIiLCJ1bmRlZmluZWQiLCJJbmRleCIsImRhdGEiLCJsYXN0X3BhZ2UiLCJjdXJyZW50X3BhZ2UiLCJwYWdlcyIsImkiLCJwdXNoIiwidXNlcnMiLCJhc3NpZ25lZFVzZXJzIiwiYXR0YWNoZWRfdXNlcnMiLCJjb21wYW55IiwiZmluZCIsImlkIiwic2VsZWN0ZWRfaXRlbXMiLCJpc0VtcHR5IiwiZm9yRWFjaCIsInYiLCJrIiwiYXNzaWduVXNlciIsImRlYXNzaWduVXNlciIsInNwbGljZSIsIm9wdGlvbkFsbG93ZWQiLCJmb3VuZCIsInNhdmVDb21wYW5pZXNVc2VycyIsIkNvbXBhbmllc1VzZXJzIiwic3VjY2VzcyIsInBvcCIsImRlbGV0ZSIsIkRlc3Ryb3kiXSwibWFwcGluZ3MiOiJBQUFBLFlBQ0FBLFNBQVFDLE9BQU8sVUFBVUMsV0FBVyxpQkFBa0IsU0FBVSxpQkFBaUIsY0FBZSxVQUFXLGFBQWMsU0FBU0MsRUFBUUMsRUFBZ0JDLEVBQWFDLEVBQVNDLEdBNkM1SyxRQUFTQyxLQUNMSCxFQUFZSSxpQkFBaUJDLEtBQUssU0FBVUMsR0FDeENSLEVBQU9TLGdCQUFrQkQsSUExQ2pDUixFQUFPVSxXQUFhLEVBQ3BCVixFQUFPVyxZQUFjLEVBQ3JCWCxFQUFPWSxTQUNQWixFQUFPYSxTQUVQYixFQUFPYyxTQUFXLFNBQVNDLEdBRVBDLFNBQWJELElBQ0NBLEVBQWEsS0FJakJkLEVBQWVnQixNQUFNRixHQUFZUixLQUFLLFNBQVVDLEdBQzVDUixFQUFPYSxNQUFRTCxFQUFTVSxLQUV4QmxCLEVBQU9VLFdBQWVGLEVBQVNVLEtBQUtDLFVBQ3BDbkIsRUFBT1csWUFBZUgsRUFBU1UsS0FBS0UsWUFLcEMsS0FBSSxHQUZBQyxNQUVJQyxFQUFFLEVBQUVBLEdBQUdkLEVBQVNVLEtBQUtDLFVBQVVHLElBQ25DRCxFQUFNRSxLQUFLRCxFQUdmdEIsR0FBT1ksTUFBUVMsS0FHdkJyQixFQUFPYyxXQUtQWixFQUFZZSxNQUFNLEdBQUcsR0FBTVYsS0FBSyxTQUFVQyxHQUN0Q1IsRUFBT3dCLE1BQVFoQixJQVduQkgsSUFLQUwsRUFBT3lCLGNBQWdCLFdBQ25CekIsRUFBTzBCLGlCQUVQLElBQUlDLEdBQVV2QixFQUFXd0IsS0FBSzVCLEVBQU9hLE1BQU1LLEtBQU0sU0FBVUksR0FDdkQsTUFBT0EsR0FBRU8sSUFBTTdCLEVBQU84QixlQUFlRCxJQUdyQ3pCLEdBQVcyQixRQUFRSixFQUFRSCxRQUMzQjNCLFFBQVFtQyxRQUFRTCxFQUFRSCxNQUFPLFNBQVVTLEVBQUVDLEdBQ3ZDbEMsRUFBTzBCLGVBQWVILEtBQUtuQixFQUFXd0IsS0FBSzVCLEVBQU93QixNQUFNTixLQUFNLFNBQVVJLEdBQ3BFLE1BQU9BLEdBQUVPLElBQU1JLEVBQUVKLFNBVWpDN0IsRUFBT21DLFdBQWEsU0FBVU4sR0FDMUI3QixFQUFPMEIsZUFBZUgsS0FBS25CLEVBQVd3QixLQUFLNUIsRUFBT1MsZ0JBQWdCUyxLQUFNLFNBQVVJLEdBQzlFLE1BQU9BLEdBQUVPLElBQU1BLE1BSXZCN0IsRUFBT29DLGFBQWUsU0FBVUgsR0FDNUJqQyxFQUFPMEIsZUFBZVcsT0FBT0osRUFBRyxJQUlwQ2pDLEVBQU9zQyxjQUFnQixTQUFTVCxHQUM1QixHQUFJVSxHQUFRbkMsRUFBV3dCLEtBQUs1QixFQUFPMEIsZUFBZ0IsU0FBVUosR0FDekQsTUFBT0EsR0FBRU8sSUFBTUEsR0FFbkIsU0FBR1UsR0FNUHZDLEVBQU93QyxtQkFBcUIsV0FDeEJ2QyxFQUFld0MsZUFBZXpDLEVBQU84QixlQUFlRCxHQUFJN0IsRUFBTzBCLGdCQUFnQm5CLEtBQUssU0FBVUMsR0FDdkZBLEVBQVNrQyxTQUNSdkMsRUFBUXdDLElBQUksVUFBVyxXQUFZLElBQ25DM0MsRUFBT2MsV0FDUFQsS0FFQUYsRUFBUXdDLElBQUksUUFBUyxHQUFJLG9CQVFyQzNDLEVBQU84QixrQkFDUDlCLEVBQU80QyxPQUFTLFdBQ1ozQyxFQUFlNEMsUUFBUTdDLEVBQU84QixlQUFlRCxJQUFJdEIsS0FBSyxTQUFVQyxHQUN6REEsRUFBU2tDLFNBQ1J2QyxFQUFRd0MsSUFBSSxVQUFXLFdBQVksSUFDbkMzQyxFQUFPYyxXQUNQVCxLQUVBRixFQUFRd0MsSUFBSSxRQUFTLEdBQUkiLCJmaWxlIjoiY29tcGFuaWVzL0NvbXBhbmllc0N0cmwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgnQmZjQXBwJykuY29udHJvbGxlcignQ29tcGFuaWVzQ3RybCcsIFsnJHNjb3BlJywgJ0NvbXBhbnlTZXJ2aWNlJywnVXNlclNlcnZpY2UnLCAndG9hc3RlcicsICd1bmRlcnNjb3JlJywgZnVuY3Rpb24oJHNjb3BlLCBDb21wYW55U2VydmljZSwgVXNlclNlcnZpY2UsIHRvYXN0ZXIsIHVuZGVyc2NvcmUpIHtcblxuICAgIC8qXG4gICAgIFRvZG8gLSBHZXQgYWxsIGNvbXBhbmllc1xuICAgICAqL1xuICAgICRzY29wZS50b3RhbFBhZ2VzID0gMDtcbiAgICAkc2NvcGUuY3VycmVudFBhZ2UgPSAxO1xuICAgICRzY29wZS5yYW5nZSA9IFtdO1xuICAgICRzY29wZS5pdGVtcyA9IFtdO1xuXG4gICAgJHNjb3BlLmdldEl0ZW1zID0gZnVuY3Rpb24ocGFnZU51bWJlcil7XG5cbiAgICAgICAgaWYocGFnZU51bWJlcj09PXVuZGVmaW5lZCl7XG4gICAgICAgICAgICBwYWdlTnVtYmVyID0gJzEnO1xuICAgICAgICB9XG5cblxuICAgICAgICBDb21wYW55U2VydmljZS5JbmRleChwYWdlTnVtYmVyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgJHNjb3BlLml0ZW1zID0gcmVzcG9uc2UuZGF0YTtcblxuICAgICAgICAgICAgJHNjb3BlLnRvdGFsUGFnZXMgICA9IHJlc3BvbnNlLmRhdGEubGFzdF9wYWdlO1xuICAgICAgICAgICAgJHNjb3BlLmN1cnJlbnRQYWdlICA9IHJlc3BvbnNlLmRhdGEuY3VycmVudF9wYWdlO1xuXG4gICAgICAgICAgICAvLyBQYWdpbmF0aW9uIFJhbmdlXG4gICAgICAgICAgICB2YXIgcGFnZXMgPSBbXTtcblxuICAgICAgICAgICAgZm9yKHZhciBpPTE7aTw9cmVzcG9uc2UuZGF0YS5sYXN0X3BhZ2U7aSsrKSB7XG4gICAgICAgICAgICAgICAgcGFnZXMucHVzaChpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJHNjb3BlLnJhbmdlID0gcGFnZXM7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgJHNjb3BlLmdldEl0ZW1zKCk7XG5cbiAgICAvKlxuICAgIFRvZG8gLSBHZXQgYWxsIGF2YWlsYWJsZSAodXNlcnMgd2l0aG91dCBjb21wYW5pZXMpIHVzZXJzXG4gICAgICovXG4gICAgVXNlclNlcnZpY2UuSW5kZXgoMSwgdHJ1ZSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgJHNjb3BlLnVzZXJzID0gcmVzcG9uc2U7XG4gICAgfSk7XG5cbiAgICAvKlxuICAgIFRvZG8gLSBHZXQgYWxsIGF2YWlsYWJsZSAodXNlcnMgd2l0aG91dCBjb21wYW5pZXMpIHVzZXJzXG4gICAgICovXG4gICAgZnVuY3Rpb24gYXZhaWxhYmxlVXNlcnMoKSB7XG4gICAgICAgIFVzZXJTZXJ2aWNlLkF2YWlsYWJsZVVzZXJzKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICRzY29wZS5hdmFpbGFibGVfdXNlcnMgPSByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGF2YWlsYWJsZVVzZXJzKCk7XG5cbiAgICAvKlxuICAgIFRvZG8gLSBBc3NpZ25lZCB1c2VycyBtb2RhbFxuICAgICAqL1xuICAgICRzY29wZS5hc3NpZ25lZFVzZXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkc2NvcGUuYXR0YWNoZWRfdXNlcnMgPSBbXTtcblxuICAgICAgICB2YXIgY29tcGFueSA9IHVuZGVyc2NvcmUuZmluZCgkc2NvcGUuaXRlbXMuZGF0YSwgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgIHJldHVybiBpLmlkID09ICRzY29wZS5zZWxlY3RlZF9pdGVtcy5pZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYoIXVuZGVyc2NvcmUuaXNFbXB0eShjb21wYW55LnVzZXJzKSl7XG4gICAgICAgICAgICBhbmd1bGFyLmZvckVhY2goY29tcGFueS51c2VycywgZnVuY3Rpb24gKHYsaykge1xuICAgICAgICAgICAgICAgICRzY29wZS5hdHRhY2hlZF91c2Vycy5wdXNoKHVuZGVyc2NvcmUuZmluZCgkc2NvcGUudXNlcnMuZGF0YSwgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGkuaWQgPT0gdi5pZDtcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIC8qXG4gICAgVG9kbyAtIEFzc2lnbiB1c2VyXG4gICAgICovXG4gICAgJHNjb3BlLmFzc2lnblVzZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgJHNjb3BlLmF0dGFjaGVkX3VzZXJzLnB1c2godW5kZXJzY29yZS5maW5kKCRzY29wZS5hdmFpbGFibGVfdXNlcnMuZGF0YSwgZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgIHJldHVybiBpLmlkID09IGlkO1xuICAgICAgICB9KSk7XG4gICAgfTtcblxuICAgICRzY29wZS5kZWFzc2lnblVzZXIgPSBmdW5jdGlvbiAodikge1xuICAgICAgICAkc2NvcGUuYXR0YWNoZWRfdXNlcnMuc3BsaWNlKHYsIDEpO1xuICAgIH07XG5cbiAgICAvLyBGb3Igc2VsZWN0Ym94ICh2aXNpYmxlIGl0ZW0pXG4gICAgJHNjb3BlLm9wdGlvbkFsbG93ZWQgPSBmdW5jdGlvbihpZCl7XG4gICAgICAgIHZhciBmb3VuZCA9IHVuZGVyc2NvcmUuZmluZCgkc2NvcGUuYXR0YWNoZWRfdXNlcnMsIGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICByZXR1cm4gaS5pZCA9PSBpZDtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmKGZvdW5kKXtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgICRzY29wZS5zYXZlQ29tcGFuaWVzVXNlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIENvbXBhbnlTZXJ2aWNlLkNvbXBhbmllc1VzZXJzKCRzY29wZS5zZWxlY3RlZF9pdGVtcy5pZCwgJHNjb3BlLmF0dGFjaGVkX3VzZXJzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgaWYocmVzcG9uc2Uuc3VjY2Vzcyl7XG4gICAgICAgICAgICAgICAgdG9hc3Rlci5wb3AoJ3N1Y2Nlc3MnLCBcIlN1Y2Nlc3MhXCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgICRzY29wZS5nZXRJdGVtcygpO1xuICAgICAgICAgICAgICAgIGF2YWlsYWJsZVVzZXJzKCk7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICB0b2FzdGVyLnBvcCgnZXJyb3InLCBcIlwiLCBcIlNlcnZlciBlcnJvciFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKlxuICAgICBUb2RvIC0gRGVsZXRlIGNvbXBhbnlcbiAgICAgKi9cbiAgICAkc2NvcGUuc2VsZWN0ZWRfaXRlbXMgPSB7fTtcbiAgICAkc2NvcGUuZGVsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBDb21wYW55U2VydmljZS5EZXN0cm95KCRzY29wZS5zZWxlY3RlZF9pdGVtcy5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmKHJlc3BvbnNlLnN1Y2Nlc3Mpe1xuICAgICAgICAgICAgICAgIHRvYXN0ZXIucG9wKCdzdWNjZXNzJywgXCJTdWNjZXNzIVwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0SXRlbXMoKTtcbiAgICAgICAgICAgICAgICBhdmFpbGFibGVVc2VycygpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgdG9hc3Rlci5wb3AoJ2Vycm9yJywgXCJcIiwgXCJTZXJ2ZXIgZXJyb3IhXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbn1dKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
