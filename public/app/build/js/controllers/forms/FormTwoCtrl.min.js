"use strict";angular.module("BfcApp").controller("FormTwoCtrl",["$scope","$state","$stateParams","toaster","FormService","$filter","$http","underscore","QuestionService","UserService","CommentService",function(e,t,s,a,o,n,i,u,r,d,c){function q(){o.Show(s.form_id).then(function(t){function s(e){var s=u.find(t.data.questions,function(t){return t.position==e});return"undefined"!=typeof s&&(s.check=!0),s}if(e.questions=[],e.save=function(t){r.Update(e.questions[t].id,JSON.stringify(e.questions[t].data)).then(function(e){a.pop("success","Success!","")})},e.questions[0]=s(0),e.questions[0]){u.isEmpty(e.questions[0].data)?e.questions[0].data=[["Bank name",t.data.name],["All currency figures are in what units (thousand, million, etc)?",""],["Bank-only or consolidated",""],["Name of banking license",""],["Date of receipt of banking license",""],["Year the bank was founded",""],["Completed by (name and title)",""],["Completed on (day/month/year)",""]]:e.questions[0].data=JSON.parse(e.questions[0].data);var o,n=document.getElementById("question_0");o=new Handsontable(n,{data:e.questions[0].data,cells:function(e,t){var s;if(7===e&&1===t)return s={type:"date"}}})}if(e.questions[1]=s(1),e.questions[1]&&(u.isEmpty(e.questions[1].data)?e.questions[1].data={file:"",comment:""}:e.questions[1].data=JSON.parse(e.questions[1].data)),e.questions[2]=s(2),e.questions[2]&&(u.isEmpty(e.questions[2].data)?e.questions[2].data={file:"",comment:""}:e.questions[2].data=JSON.parse(e.questions[2].data)),e.questions[3]=s(3),e.questions[3]&&(u.isEmpty(e.questions[3].data)?e.questions[3].data={file:"",comment:""}:e.questions[3].data=JSON.parse(e.questions[3].data)),e.questions[4]=s(4),e.questions[4]&&(u.isEmpty(e.questions[4].data)?e.questions[4].data={file:"",comment:""}:e.questions[4].data=JSON.parse(e.questions[4].data)),e.questions[5]=s(5),e.questions[5]){u.isEmpty(e.questions[5].data)?e.questions[5].data=[["Company Name","% Owned","Main Activities","Total Assets of Subsidiary as of __/__/20__ ","Total Net Income of Subsidiary in Financial Year 20__"],["Subsidiary Companies      ","","","",""],["","","","",""],["","","","",""],["Associate Companies","","","",""],["","","","",""],["","","","",""]]:e.questions[5].data=JSON.parse(e.questions[5].data);var i,d=document.getElementById("question_5");i=new Handsontable(d,{data:e.questions[5].data})}if(e.questions[6]=s(6),e.questions[6]){u.isEmpty(e.questions[6].data)?e.questions[6].data=[["Name","% Ownership","Represented on Board of Directors? (Yes/No)","Is Public/ Govâ€™t? (Yes/No)","Main business activity of shareholder","Country","Political Affiliation (if any)"],["","","","","","",""],["","","","","","",""],["","","","","","",""],["Other","","","","","",""],["TOTAL","=SUM(B1:B5)","","","","",""]]:e.questions[6].data=JSON.parse(e.questions[6].data);var c,q=document.getElementById("question_6");c=new Handsontable(q,{data:e.questions[6].data,columns:[{},{type:"numeric",format:"%"},{type:"dropdown",source:["yes","no"]},{type:"dropdown",source:["yes","no"]},{},{type:"dropdown",source:["USA","Ukraine"]},{}],formulas:!0,cells:function(e,t){var s;return 0===e&&1===t?s={type:"text"}:0===e&&2===t||0===e&&3===t||0===e&&5===t?s={type:"text"}:void 0}})}if(e.questions[7]=s(7),e.questions[7]){u.isEmpty(e.questions[7].data)?e.questions[7].data=[["Name","Representing which shareholder","Board Member Since (Year)","Is he/she Independent (Yes/No)","Is he/she an executive of the Bank (Title/No)","Experience","Prior Banking Experience (Yes/No)"],["","","","","","",""],["","","","","","",""],["","","","","","",""],["","","","","","",""],["","","","","","",""]]:e.questions[7].data=JSON.parse(e.questions[7].data);var m,l=document.getElementById("question_7");m=new Handsontable(l,{data:e.questions[7].data,columns:[{},{},{type:"date"},{type:"dropdown",source:["yes","no"]},{},{},{type:"dropdown",source:["yes","no"]}],cells:function(e,t){var s;if(0===e&&2===t||0===e&&3===t||0===e&&6===t)return s={type:"text"}}})}if(e.questions[8]=s(8),e.questions[8]&&(u.isEmpty(e.questions[8].data)?e.questions[8].data={check:"",comment:""}:e.questions[8].data=JSON.parse(e.questions[8].data)),e.questions[9]=s(9),e.questions[9]){u.isEmpty(e.questions[9].data)?e.questions[9].data=[["Committee Name","Name of Members"],["",""],["",""],["",""],["",""],["",""]]:e.questions[9].data=JSON.parse(e.questions[9].data);var _,p=document.getElementById("question_9");_=new Handsontable(p,{data:e.questions[9].data})}if(e.questions[10]=s(10),e.questions[10]){u.isEmpty(e.questions[10].data)?e.questions[10].data=[["Name (Mr./Ms.)","","","",""],["Title","","","Since:",""],["Years of professional experience","Total:","","",""],["Years of banking experience","Total:","","With this bank:",""],["Previous experience","","","",""],["Specific expertise","","","",""],["Degree and University","","","",""],["Other","","","",""],["","","","",""],["Name (Mr./Ms.)","","","",""],["Title","","","Since:",""],["Years of professional experience","Total:","","",""],["Years of banking experience","Total:","","With this bank:",""],["Previous experience","","","",""],["Specific expertise","","","",""],["Degree and University","","","",""],["Other","","","",""],["","","","",""],["Name (Mr./Ms.)","","","",""],["Title","","","Since:",""],["Years of professional experience","Total:","","",""],["Years of banking experience","Total:","","With this bank:",""],["Previous experience","","","",""],["Specific expertise","","","",""],["Degree and University","","","",""],["Other","","","",""]]:e.questions[10].data=JSON.parse(e.questions[10].data);var f,y=document.getElementById("question_10");f=new Handsontable(y,{data:e.questions[10].data,mergeCells:[{row:0,col:1,rowspan:1,colspan:4},{row:1,col:1,rowspan:1,colspan:2},{row:2,col:2,rowspan:1,colspan:3},{row:4,col:1,rowspan:1,colspan:4},{row:5,col:1,rowspan:1,colspan:4},{row:6,col:1,rowspan:1,colspan:4},{row:7,col:1,rowspan:1,colspan:4},{row:8,col:0,rowspan:1,colspan:5},{row:9,col:1,rowspan:1,colspan:4},{row:10,col:1,rowspan:1,colspan:2},{row:11,col:2,rowspan:1,colspan:3},{row:13,col:1,rowspan:1,colspan:4},{row:14,col:1,rowspan:1,colspan:4},{row:15,col:1,rowspan:1,colspan:4},{row:16,col:1,rowspan:1,colspan:4},{row:17,col:0,rowspan:1,colspan:5},{row:18,col:1,rowspan:1,colspan:4},{row:19,col:1,rowspan:1,colspan:2},{row:20,col:2,rowspan:1,colspan:3},{row:22,col:1,rowspan:1,colspan:4},{row:23,col:1,rowspan:1,colspan:4},{row:24,col:1,rowspan:1,colspan:4},{row:25,col:1,rowspan:1,colspan:4}]})}if(e.questions[11]=s(11),e.questions[11]){u.isEmpty(e.questions[11].data)?e.questions[11].data=[["","Plan for __/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Branch Type #1","","","",""],["Branch Type #2","","","",""],["Total Offices","","","",""],["Please define briefly the different types of offices*:","","","",""],["","Description","","",""],["Branch Type #1","","","",""],["Branch Type #2\t","","","",""]]:e.questions[11].data=JSON.parse(e.questions[11].data);var S,E=document.getElementById("question_11");S=new Handsontable(E,{data:e.questions[11].data,mergeCells:[{row:4,col:0,rowspan:1,colspan:5},{row:5,col:1,rowspan:1,colspan:4},{row:6,col:1,rowspan:1,colspan:4},{row:7,col:1,rowspan:1,colspan:4}]})}if(e.questions[12]=s(12),e.questions[12]){u.isEmpty(e.questions[12].data)?e.questions[12].data=[["Customer Segment: Retail","","",""],["Name of Committee / Approval Level","Committee Members","Approval Authority (in local currency)","Can approve related party loans (Y/N)"],["","","",""],["","","",""],["","","",""],["Customer Segment: SME","","",""],["Name of Committee / Approval Level","Committee Members","Approval Authority (in local currency)","Can approve related party loans (Y/N)"],["","","",""],["","","",""],["","","",""],["Customer Segment: Large corporates","","",""],["Name of Committee / Approval Level","Committee Members","Approval Authority (in local currency)","Can approve related party loans (Y/N)"],["","","",""],["","","",""],["","","",""]]:e.questions[12].data=JSON.parse(e.questions[12].data);var w,h=document.getElementById("question_12");w=new Handsontable(h,{data:e.questions[12].data,columns:[{},{},{},{type:"dropdown",source:["yes","no"]}],mergeCells:[{row:0,col:0,rowspan:1,colspan:3},{row:5,col:0,rowspan:1,colspan:3},{row:10,col:0,rowspan:1,colspan:3}],cells:function(e,t){var s;if(0===e||1===e||6===e||11===e)return s={type:"text"}}})}if(e.questions[13]=s(13),e.questions[13]){u.isEmpty(e.questions[13].data)?e.questions[13].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Large Corporate","","","",""],["Commercial/Medium Enterprise","","","",""],["SME","","","",""],["Consumer","","","",""],["Banks/ Other Financial Institutions","","","",""],["Total Gross Loan Portfolio","=SUM(B1:B6)","=SUM(C1:C6)","=SUM(D1:D6)","=SUM(E1:E6)"]]:e.questions[13].data=JSON.parse(e.questions[13].data);var N,g=document.getElementById("question_13");N=new Handsontable(g,{data:e.questions[13].data,formulas:!0,cells:function(e,t){var s;if(6===e)return s={readOnly:!0}}})}if(e.questions[14]=s(14),e.questions[14]){u.isEmpty(e.questions[14].data)?e.questions[14].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Economic sector/Industry #1","","","",""],["Economic sector/Industry #2","","","",""],["Economic sector/Industry #3","","","",""],["Economic sector/Industry #4","","","",""],["Economic sector/Industry #5","","","",""],["Economic sector/Industry #6","","","",""],["Economic sector/Industry #7","","","",""],["Economic sector/Industry #8","","","",""],["Economic sector/Industry #9","","","",""],["Economic sector/Industry #10","","","",""],["Total Gross Loan Portfolio","=SUM(B1:B11)","=SUM(C1:C11)","=SUM(D1:D11)","=SUM(E1:E11)"]]:e.questions[14].data=JSON.parse(e.questions[14].data);var v,B=document.getElementById("question_14");v=new Handsontable(B,{data:e.questions[14].data,formulas:!0})}if(e.questions[15]=s(15),e.questions[15]){u.isEmpty(e.questions[15].data)?e.questions[15].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Local Currency","","","",""],["Foreign Currency","","","",""],["Total Gross Loan Portfolio","=SUM(B1:B3)","=SUM(C1:C3)","=SUM(D1:D3)","=SUM(E1:E3)"]]:e.questions[15].data=JSON.parse(e.questions[15].data);var O,b=document.getElementById("question_15");O=new Handsontable(b,{data:e.questions[15].data,formulas:!0})}if(e.questions[16]=s(16),e.questions[16]){u.isEmpty(e.questions[16].data)?e.questions[16].data=[["","__/__/20__","Typical Loan to Value Ratio (%)","Frequency of (Re)Appraisals"],["Real estate","","",""],["Inventories","","",""],["Shares of other companies","","",""],["Equipment","","",""],["Gold and precious metals","","",""],["Cash","","",""],["Other collateral","","",""],["Guarantees of individuals or enterprises","","",""],["Total Secured","=SUM(B1:B9)","=SUM(C1:C9)","=SUM(D1:D9)"],["Unsecured","","",""],["Total Gross Loan Portfolio","=SUM(B9:B11)","=SUM(C9:C11)","=SUM(D9:D11)"]]:e.questions[16].data=JSON.parse(e.questions[16].data);var C,I=document.getElementById("question_16");C=new Handsontable(I,{data:e.questions[16].data,formulas:!0})}if(e.questions[17]=s(17),e.questions[17]){u.isEmpty(e.questions[17].data)?e.questions[17].data=[["","__/__/20__"],["Demand and less than 1 month",""],["From 1 to 3 months",""],["From 3 to 12 months",""],["From 1 to 5 years",""],["More than 5 years",""],["Total Gross Loan Portfolio","=SUM(B1:B6)"]]:e.questions[17].data=JSON.parse(e.questions[17].data);var M,T=document.getElementById("question_17");M=new Handsontable(T,{data:e.questions[17].data,formulas:!0})}if(e.questions[18]=s(18),e.questions[18]){u.isEmpty(e.questions[18].data)?e.questions[18].data=[["","__/__/20__"],["Fixed interest rate",""],["Floating interest rate",""],["Total Gross Loan Portfolio","=SUM(B1:B3)"]]:e.questions[18].data=JSON.parse(e.questions[18].data);var U,J=document.getElementById("question_18");U=new Handsontable(J,{data:e.questions[18].data,formulas:!0})}if(e.questions[19]=s(19),e.questions[19]){u.isEmpty(e.questions[19].data)?e.questions[19].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Performing Loans","","","",""],["Non-performing Loans","","","",""],["Other Funded Exposure","","","",""],["Total Funded Exposure to Related Parties","=SUM(B1:B4)","=SUM(C1:C4)","=SUM(D1:D4)","=SUM(E1:E4)"],["Unfunded Exposure to Related Parties**","","","",""]]:e.questions[19].data=JSON.parse(e.questions[19].data);var L,A=document.getElementById("question_19");L=new Handsontable(A,{data:e.questions[19].data,formulas:!0})}if(e.questions[20]=s(20),e.questions[20]){u.isEmpty(e.questions[20].data)?e.questions[20].data=[["","__/__/20__","NPL (Y/N)","31/12/20__","NPL (Y/N)","31/12/20__","NPL (Y/N)","31/12/20__","NPL (Y/N)"],["Funded","","","","","","","",""],["Unfunded","","","","","","","",""]]:e.questions[20].data=JSON.parse(e.questions[20].data);var D,k=document.getElementById("question_20");D=new Handsontable(k,{data:e.questions[20].data})}if(e.questions[21]=s(21),e.questions[21]){u.isEmpty(e.questions[21].data)?e.questions[21].data=[["","__/__/20__"],["Staff Loans",""],["Related Party Loans",""],["Total Staff & Related Party Loans",""]]:e.questions[21].data=JSON.parse(e.questions[21].data);var F,H=document.getElementById("question_21");F=new Handsontable(H,{data:e.questions[21].data})}if(e.questions[22]=s(22),e.questions[22]){u.isEmpty(e.questions[22].data)?e.questions[22].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Funded Exposure to Top 20","","","",""],["Unfunded* Exposure to Top 20","","","",""],["Single Largest Funded and Unfunded Exposure","","","",""]]:e.questions[22].data=JSON.parse(e.questions[22].data);var P,x=document.getElementById("question_22");P=new Handsontable(x,{data:e.questions[22].data})}if(e.questions[23]=s(23),e.questions[23]){u.isEmpty(e.questions[23].data)?e.questions[23].data=[["#","Obligor Name","Outstanding Exposure","NPL","Days overdue","Sector","Collateral Coverage","Owner-ship","Related partye.questions[23].data=JSON.parse(e.questions[23].data);var Y,R=document.getElementById("question_23");Y=new Handsontable(R,{data:e.questions[23].data,mergeCells:[{row:0,col:2,rowspan:1,colspan:3}]})}if(e.questions[24]=s(24),e.questions[24]){u.isEmpty(e.questions[24].data)?e.questions[24].data=[["","NPL* (Y/N)","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Standard","","","","",""],["Special Mention","","","","",""],["Substandard","","","","",""],["Doubtful","","","","",""],["Loss","","","","",""],["Total Gross Loan Portfolio","=SUM(B2:B6)","=SUM(C2:C6)","=SUM(D2:D6)","=SUM(E2:E6)","=SUM(F2:F6)"]]:e.questions[24].data=JSON.parse(e.questions[24].data);var G,X=document.getElementById("question_24");G=new Handsontable(X,{data:e.questions[24].data,formulas:!0})}if(e.questions[25]=s(25),e.questions[25]){u.isEmpty(e.questions[25].data)?e.questions[25].data=[["Sector","Amount of NPLs"],["",""],["",""],["",""]]:e.questions[25].data=JSON.parse(e.questions[25].data);var Q,W=document.getElementById("question_25");Q=new Handsontable(W,{data:e.questions[25].data})}if(e.questions[26]=s(26),e.questions[26]){u.isEmpty(e.questions[26].data)?e.questions[26].data=[["","Period up to __/__/20__","Year 20__","Year 20__","Year 20__"],["NPLs sold during the year","","","",""],["Foreclosed Assets sold during the year","","","",""]]:e.questions[26].data=JSON.parse(e.questions[26].data);var $,V=document.getElementById("question_26");$=new Handsontable(V,{data:e.questions[26].data})}if(e.questions[27]=s(27),e.questions[27]){u.isEmpty(e.questions[27].data)?e.questions[27].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Foreclosed assets on the balance","","","",""],["Of which included in total NPLs","","","",""]]:e.questions[27].data=JSON.parse(e.questions[27].data);var j,z=document.getElementById("question_27");j=new Handsontable(z,{data:e.questions[27].data})}if(e.questions[28]=s(28),e.questions[28]){u.isEmpty(e.questions[28].data)?e.questions[28].data=[["","Period up to __/__/20__","Year 20__","Year 20__","Year 20__"],["Gross Write-offs","","","",""],["Recoveries*","","","",""],["Net Write-offs (Gross Write-offs â€“ Recoveries)","","","",""]]:e.questions[28].data=JSON.parse(e.questions[28].data);var K,Z=document.getElementById("question_28");K=new Handsontable(Z,{data:e.questions[28].data})}if(e.questions[29]=s(29),e.questions[29]){u.isEmpty(e.questions[29].data)?e.questions[29].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Generic provisions","","","",""],["Specific provisions (for NPLs)","","","",""],["Total Loan Loss Reserves","=SUM(B1:B3)","=SUM(C1:C3)","=SUM(D1:D3)","=SUM(E1:E3)"]]:e.questions[29].data=JSON.parse(e.questions[29].data);var ee,te=document.getElementById("question_29");ee=new Handsontable(te,{data:e.questions[29].data,formulas:!0})}if(e.questions[30]=s(30),e.questions[30]){u.isEmpty(e.questions[30].data)?e.questions[30].data=[["","__/__/20__","31/12/20__"],["Direct real estate investments","",""],["Construction loans and loans to real estate developers","",""],["Residential mortgage loans","",""],["Commercial real estate loans","",""],["Loans to manufacturers of cement and other construction materials*","",""],["Total","=SUM(B1:B6)","=SUM(C1:C6)"]]:e.questions[30].data=JSON.parse(e.questions[30].data);var se,ae=document.getElementById("question_30");se=new Handsontable(ae,{data:e.questions[30].data,formulas:!0})}if(e.questions[31]=s(31),e.questions[31]){u.isEmpty(e.questions[31].data)?e.questions[31].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Largest group depositor","","","",""],["Top 20 depositors","","","",""]]:e.questions[31].data=JSON.parse(e.questions[31].data);var oe,ne=document.getElementById("question_31");oe=new Handsontable(ne,{data:e.questions[31].data})}if(e.questions[32]=s(32),e.questions[32]){u.isEmpty(e.questions[32].data)?e.questions[32].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Local Currency","","","",""],["Foreign Currency","","","",""],["Total Customer Deposits","=SUM(B2:B3)","=SUM(C2:C3)","=SUM(D2:D3)","=SUM(E2:E3)"]]:e.questions[32].data=JSON.parse(e.questions[32].data);var ie,ue=document.getElementById("question_32");ie=new Handsontable(ue,{data:e.questions[32].data,formulas:!0})}if(e.questions[33]=s(33),e.questions[33]){u.isEmpty(e.questions[33].data)?e.questions[33].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Retail Deposits","","","",""],["Corporate Deposits","","","",""],["Total Customer Deposits","=SUM(B2:B3)","=SUM(C2:C3)","=SUM(D2:D3)","=SUM(E2:E3)"]]:e.questions[33].data=JSON.parse(s(33).data);var re,de=document.getElementById("question_33");re=new Handsontable(de,{data:e.questions[33].data,formulas:!0})}if(e.questions[34]=s(34),e.questions[34]){u.isEmpty(e.questions[34].data)?e.questions[34].data=[["","__/__/20__"],["Fixed interest rate",""],["Floating interest rate",""],["Non-interest bearing",""]]:e.questions[34].data=JSON.parse(e.questions[34].data);var ce,qe=document.getElementById("question_34");ce=new Handsontable(qe,{data:e.questions[34].data})}if(e.questions[35]=s(35),e.questions[35]){u.isEmpty(e.questions[35].data)?e.questions[35].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Tier 1, capital","","","",""],["Deductions","","","",""],["Tier 2, capital","","","",""],["Deductions","","","",""],["Total Capital","","","",""],["Total Risk Weighted Assets","","","",""],["Tier 1 ratio (%)","","","",""],["Total CAR ratio (%)","","","",""],["Basis of calculation (Basel I, Basel II, local standards)","","","",""]]:e.questions[35].data=JSON.parse(e.questions[35].data);var me,le=document.getElementById("question_35");me=new Handsontable(le,{data:e.questions[35].data})}if(e.questions[36]=s(36),e.questions[36]){u.isEmpty(e.questions[36].data)?e.questions[36].data=[["Lender","Amount","Expiry Date","31/12/20__","31/12/20__"],["","","","",""],["","","","",""],["","","","",""]]:e.questions[36].data=JSON.parse(e.questions[36].data);var _e,pe=document.getElementById("question_36");_e=new Handsontable(pe,{data:e.questions[36].data})}if(e.questions[37]=s(37),e.questions[37]){u.isEmpty(e.questions[37].data)?e.questions[37].data=[["","Up to 1 month","1-3 Months","3-12 months","1-5 years","Over 5 years","No Maturity","TOTAL"],["FINANCIAL ASSETS","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["FINANCIAL LIABILITIES","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["Gap","","","","","","",""]]:e.questions[37].data=JSON.parse(e.questions[37].data);var fe,ye=document.getElementById("question_37");fe=new Handsontable(ye,{data:e.questions[37].data})}if(e.questions[38]=s(38),e.questions[38]){u.isEmpty(e.questions[38].data)?e.questions[38].data=[["","Up to 1 month","1-3 Months","3-12 months","1-5 years","Over 5 years","Non-interest bearing"],["FINANCIAL ASSETS","","","","","",""],["","","","","","",""],["","","","","","",""],["","","","","","",""],["FINANCIAL LIABILITIES","","","","","",""],["","","","","","",""],["","","","","","",""],["","","","","","",""],["Gap","","","","","",""]]:e.questions[38].data=JSON.parse(e.questions[38].data);var Se,Ee=document.getElementById("question_38");Se=new Handsontable(Ee,{data:e.questions[38].data})}if(e.questions[39]=s(39),e.questions[39]){u.isEmpty(e.questions[39].data)?e.questions[39].data=[["","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["A. Total On-balance sheet FX Assets","","","",""],["B. Total Off-balance sheet FX Assets (e.g. FX forward purchases)","","","",""],["Total Gross FX Long Position (A+B)","","","",""],["C. Total On-balance sheet FX Liabilities","","","",""],["D. Total Off-balance sheet FX Liabilities (e.g. FX forward sales)","","","",""],["Total Gross FX Short Position (C+D)","","","",""],["Net Open Position: On-Balance (A-C)","","","",""],["Net Open Position: On and Off-Balance ((A+B)-(C+D))","","","",""]]:e.questions[39].data=JSON.parse(e.questions[39].data);var we,he=document.getElementById("question_39");we=new Handsontable(he,{data:e.questions[39].data})}if(e.questions[40]=s(40),e.questions[40]){u.isEmpty(e.questions[40].data)?e.questions[40].data=[["Type of Commitment","__/__/20__","31/12/20__","31/12/20__","31/12/20__"],["Committed credit lines/loans","","","",""],["Letters of credit","","","",""],["Guarantees","","","",""],["Other","","","",""],["Total","","","",""]]:e.questions[40].data=JSON.parse(e.questions[40].data);var Ne,ge=document.getElementById("question_40");Ne=new Handsontable(ge,{data:e.questions[40].data})}if(e.questions[41]=s(41),e.questions[41]&&(u.isEmpty(e.questions[41].data)?e.questions[41].data={item_1:{check:"",comment:"",radio:""},item_2:{check:"",comment:""},item_3:{check:"",comment:""},item_4:{check:"",comment:""},item_5:{check:""}}:e.questions[41].data=JSON.parse(e.questions[41].data)),e.questions[42]=s(42),e.questions[42]&&(u.isEmpty(e.questions[42].data)?e.questions[42].data={comment:""}:e.questions[42].data=JSON.parse(e.questions[42].data)),e.questions[43]=s(43),e.questions[43]){u.isEmpty(e.questions[43].data)?e.questions[43].data=[["#","Obligor Name"],["1",""],["2",""],["3",""],["4",""],["5",""],["6",""],["7",""],["8",""],["9",""],["10",""]]:e.questions[43].data=JSON.parse(e.questions[43].data);var ve,Be=document.getElementById("question_43");ve=new Handsontable(Be,{data:e.questions[43].data})}if(e.questions[44]=s(44),e.questions[44]){u.isEmpty(e.questions[44].data)?e.questions[44].data={data:[["#","Depositor Name","Sector","Related party"],["1","","",""],["2","","",""],["3","","",""],["4","","",""],["5","","",""],["6","","",""],["7","","",""],["8","","",""],["9","","",""],["10","","",""]],addition:{1:{comment:""},2:{comment:""},3:{comment:""},4:{comment:""},5:{comment:""},6:{comment:""},7:{comment:""}}}:e.questions[44].data=JSON.parse(e.questions[44].data);var Oe,be=document.getElementById("question_44");Oe=new Handsontable(be,{data:e.questions[44].data.data})}e.questions[45]=s(45),e.questions[45]&&(u.isEmpty(e.questions[45].data)?e.questions[45].data={comment:""}:e.questions[45].data=JSON.parse(e.questions[45].data)),e.questions[46]=s(46),e.questions[46]&&(u.isEmpty(e.questions[46].data)?e.questions[46].data={comment:""}:e.questions[46].data=JSON.parse(e.questions[46].data)),e.questions[47]=s(47),e.questions[47]&&(u.isEmpty(e.questions[47].data)?e.questions[47].data={item_1:{check:"",comment:""},item_2:{check:"",comment:""}}:e.questions[47].data=JSON.parse(e.questions[47].data)),e.questions[48]=s(48),e.questions[48]&&(u.isEmpty(e.questions[48].data)?e.questions[48].data={item_1:{check:"",radio:""},item_2:{check:"",radio:""},item_3:{check:"",radio:""},item_4:{check:"",radio:""},item_5:{check:"",radio:""},item_6:{check:"",radio:""},item_7:{check:"",radio:""}}:e.questions[48].data=JSON.parse(e.questions[48].data)),e.questions[49]=s(49),e.questions[49]&&(u.isEmpty(e.questions[49].data)?e.questions[49].data={item_1:{check:"",radio:""},item_2:{check:"",radio:""}}:e.questions[49].data=JSON.parse(e.questions[49].data)),e.questions[50]=s(50),e.questions[50]&&(u.isEmpty(e.questions[50].data)?e.questions[50].data={item_1:{comment:"",check:""},item_2:{comment:""},item_3:{comment:""}}:e.questions[50].data=JSON.parse(e.questions[50].data)),e.questions[51]=s(51),e.questions[51]&&(u.isEmpty(e.questions[51].data)?e.questions[51].data={item_1:{comment:"",check:"",radio:""},item_2:{comment:"",check:"",radio:""}}:e.questions[51].data=JSON.parse(e.questions[51].data)),e.questions[52]=s(52),e.questions[52]&&(u.isEmpty(e.questions[52].data)?e.questions[52].data={check:""}:e.questions[52].data=JSON.parse(e.questions[52].data))})}q(),e.users=[],e.storeAssign=function(){var t=[];angular.forEach(e.questions,function(e,s){e&&e.check&&t.push(e.id)}),d.StoreAssign({data:t,users:function(){var t=[];return angular.forEach(e.users,function(e,s){t.push({email:e.text})}),t}()},s.company_id,s.form_id).then(function(e){e.success?a.pop("success","Success!",""):angular.forEach(e.error,function(e){angular.forEach(e,function(e){a.pop("error","",e)})})})},e.assignToBcp=function(){var t=[];angular.forEach(e.questions,function(e,s){e.check&&t.push(e.id)}),d.StoreQuestionsToBcp(s.company_id,s.form_id,t).then(function(e){e.success&&a.pop("success","Success!","")})},e.selected_question={},e.getQuestionUsers=function(t){e.tmp_question_id=t,r.Users(t).then(function(t){e.selected_question.users=t.data})},e.unassignUser=function(t){r.Detach(e.tmp_question_id,t).then(function(t){t.success&&(a.pop("success","Success!",""),e.getQuestionUsers(e.tmp_question_id))})},e.visibleReplyForm=!1;var m=angular.element(document.querySelector("#global_add_comments_form"));e.showReplyForm=function(t,s){console.log(t,s),e.temp_comment_id=t,e.temp_comment_index=s;var a=angular.element(document.querySelector("#tmp_add_comments_form"+t));a.append(m),e.visibleReplyForm=!e.visibleReplyForm},e.comments=[],e.getAllComments=function(t){e.tmp_question_id=t,c.GetToQuestion(t).then(function(t){e.comments=t})},e.new_comment="",e.comment_tmp_reply="",e.storeComment=function(t,s){var o={comment:e.new_comment,question_id:e.tmp_question_id};"undefined"!=typeof t&&(o.comment=e.comment_tmp_reply,o.reply=1,o.reply_to=t),c.Store(o).then(function(t){t.success?(a.pop("success","Success!",""),e.new_comment="","undefined"==typeof s&&e.getAllComments(e.tmp_question_id),e.visibleReplyForm=!1,e.comment_tmp_reply=""):angular.forEach(t.error,function(e){angular.forEach(e,function(e){a.pop("error","",e)})})})},e.approveQuestion=function(e){r.Approve(e).then(function(e){e&&(a.pop("success","Success!",""),t.reload())})},e.disapproveQuestion=function(e){r.Disapprove(e).then(function(e){e&&(a.pop("success","Success!",""),t.reload())})}}]);
//# sourceMappingURL=data:application/json;base64,
